============================
How to Use 4-print_square.py
============================

THIS MODULE PERFORMS THE ACTION OF PRINTING A SQUARE AND IT DOES
THAT BY USING A FUNCTION NAMED ``print_square(size)``.

Usage
=====


THE FUNCTION PRINTS THE SQUARE USING '#'. The parameter ``size``
REPRESENTS HEIGHT AND WIDTH OF THE SQUARE.

::

    >>> print_square = __import__('4-print_square').print_square
    >>> print_square(1)
    #

::


    >>> print_square(4)
    ####
    ####
    ####
    ####

::


    >>> print_square(10)
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########


IT PRINTS NOTHING IF size IS EQUAL TO ZERO.

::


    >>> print_square(0)

Invalid Sizes
=============


A TypeError is raised, IF size ISN'T INTEGER.

::

    >>> print_square("ANYTHING BUT INTEGER")
    Traceback (most recent call last):
    TypeError: size must be an integer

::

    >>> print_square(1.1)
    Traceback (most recent call last):
    TypeError: size must be an integer

::

    >>> print_square(None)
    Traceback (most recent call last):
    TypeError: size must be an integer

A ValueError is raised, IF size < 0.

::


    >>> print_square(-7)
    Traceback (most recent call last):
    ValueError: size must be >= 0


type-checking HAPPENS before value-checking.

::

    >>> print_square(-9.3)
    Traceback (most recent call last):
    TypeError: size must be an integer


THE FUNCTION EXPECTS AT LEAST ONE ARGUMENT TO BE PROVIDED.

::


    >>> print_square()
    Traceback (most recent call last):
    TypeError: print_square() missing 1 required positional argument: 'size'
